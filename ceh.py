import base64
import random
import time
from threading import Thread
from colorama import Fore, Style, init

print("""\n   _____ ______ _    _   __  __            _      _______        _   
  / ____|  ____| |  | | |  \/  |          | |    |__   __|      | |  
 | |    | |__  | |__| | | \  / | ___   ___| | __    | | ___  ___| |_ 
 | |    |  __| |  __  | | |\/| |/ _ \ / __| |/ /    | |/ _ \/ __| __|
 | |____| |____| |  | | | |  | | (_) | (__|   <     | |  __/\__ \ |_ 
  \_____|______|_|  |_| |_|  |_|\___/ \___|_|\_\    |_|\___||___/\__|
    Quiz by H3LLKY4T                                            v1.3      \n""")
print("Mock Test For Certified Ethical Hacker V12                         \n")
print("Last Updated April 2024                        Total Time 4 Hours     \n ")
print("-------------------------------------------------------------------------")
init()

# Note for fellow Hackers out there! Try to solve it yourself. Dont Reverse Engineer this code :)
eqp = ""
if eqp:
    dqps = base64.b64decode(eqp).decode('utf-8')
    exec(dqps)
else:
    question_pool = [] 

def choose_questions(pool, num_questions=5):
    return random.sample(pool, min(num_questions, len(pool)))

def ask_question(question_number, question, ca, options):
    print(f"Question {question_number}: {question}")
    for i, option in enumerate(options, start=1):
        print(f"{Fore.CYAN}{i}. {option}{Style.RESET_ALL}")  
    while True:
        try:
            answer = int(input("Your answer (number): ")) - 1
            if 0 <= answer <= 3:
                if options[answer] == ca:
                    print(f"{Fore.GREEN}Correct!{Style.RESET_ALL}")  
                    return True
                else:
                    print(f"{Fore.RED}Wrong! The correct answer was: {ca}{Style.RESET_ALL}")  
                    return False
            else:
                raise ValueError
        except (ValueError, IndexError):
            print(f"{Fore.RED}Invalid input. Please enter a number from 1 to 4.{Style.RESET_ALL}")

def run_quiz():
    score = 0

    sq = choose_questions(question_pool, min(50, len(question_pool)))

    for question_number, (question, ca, options) in enumerate(sq, start=1):
        if ask_question(question_number, question, ca, options):
            score += 1
        print()

    print(f"Quiz completed! Your score is {score} out of {len(sq)}")
    print(f"Your percentage is {(score / len(sq)) * 100:.2f}%")
    print("Press Ctrl + C to Exit")

def timer(seconds):
    for _ in range(seconds):
        mins, secs = divmod(seconds, 60)
        hours, mins = divmod(mins, 60)
        time_format = '{:02d}:{:02d}:{:02d}'.format(hours, mins, secs)
        
        time.sleep(1)
        seconds -= 1
    print("\nTime's up! The quiz will now end.")

def main():
    quiz_duration = 14400
    quiz_thread = Thread(target=run_quiz)
    timer_thread = Thread(target=timer, args=(quiz_duration,))

    timer_thread.start()
    quiz_thread.start()

    quiz_thread.join()
    if quiz_thread.is_alive():
        print("You didn't finish in time!")

if __name__ == "__main__":
    main()
